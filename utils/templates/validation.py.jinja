# Automatically generated file. Do not modify.

# Table for connectivity
# "Basin": ["LinearResistance"] means that the downstream of basin can be LinearResistance only
node_type_connectivity: dict[str, list[str]] = {
{% for n in nodes %}
    '{{n[:name]}}': [{% for value in n[:connectivity] %}
        '{{ value }}',
    {% end %}],
{% end %}
}

# Function to validate connection
def can_connect(node_type_up: str, node_type_down: str) -> bool:
    if node_type_up in node_type_connectivity:
        return node_type_down in node_type_connectivity[node_type_up]
    return False

flow_link_neighbor_amount: dict[str, list[int]] = {
{% for n in nodes %}
    '{{n[:name]}}':
    [{{ n[:flow_neighbor_bound].in_min }}, {{ n[:flow_neighbor_bound].in_max }}, {{ n[:flow_neighbor_bound].out_min }}, {{ n[:flow_neighbor_bound].out_max }}],
{% end %}
}

control_link_neighbor_amount: dict[str, list[int]] = {
{% for n in nodes %}
    '{{n[:name]}}':
    [{{ n[:control_neighbor_bound].in_min }}, {{ n[:control_neighbor_bound].in_max }}, {{ n[:control_neighbor_bound].out_min }}, {{ n[:control_neighbor_bound].out_max }}],
{% end %}
}
