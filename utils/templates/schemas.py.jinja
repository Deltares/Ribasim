# Automatically generated file. Do not modify.

from collections.abc import Callable
from typing import Annotated, Any

import pandas as pd
import pandera as pa
import pyarrow
from pandera.dtypes import Int32
from pandera.typing import Index, Series

from ribasim import migrations

class _BaseSchema(pa.DataFrameModel):
    class Config:
        add_missing_columns = True
        coerce = True

    @classmethod
    def _index_name(self) -> str:
        return "fid"

    @pa.dataframe_parser
    def _name_index(cls, df):
        df.index.name = cls._index_name()
        return df

    @classmethod
    def migrate(cls, df: Any, schema_version: int) -> Any:
        f: Callable[[Any, Any], Any] = getattr(
            migrations, str(cls.__name__).lower() + "_migration", lambda x, _: x
        )
        return f(df, schema_version)

{% for m in models %}
class {{m[:name]}}Schema(_BaseSchema):
    fid: Index[Int32] = pa.Field(default=1, check_name=True, coerce=True)
  {% for f in m[:fields] %}
    {% if (f[1] == :node_id) %}
    {{ f[1] }}: {{ f[2] }} = pa.Field(nullable={{ f[3] }}, default=0)
    {% else %}
    {{ f[1] }}: {{ f[2] }} = pa.Field(nullable={{ f[3] }})
    {% end %}
  {% end %}
{% end %}
