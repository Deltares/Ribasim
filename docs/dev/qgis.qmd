---
title: "QGIS plugin development"
---

# Set up the developer environment

After you have installed the environment as described [here](/dev/core.qmd) you must still activate the QGIS plugins.

::: {.callout-note}
Note that on macOS you currently need to manually install and point to a QGIS executable in your path.
If you use pixi that could be as simple as: `pixi global install --environment qgis qgis pandas`.
:::

The simplest way to do this is by running `pixi run install-qgis-plugins`.
It grabs the latest version of the iMOD QGIS plugin and it makes a symlink to the ribasim_qgis folder so that QGIS can find it.
It also installs plugins that make it possible to reload and debug your plugin while QGIS is open.

:::{.callout-note}
On Windows you need to have Developer mode enabled.
Otherwise you will not have enough access rights to create symlinks.
For more info, see this [Windows blog](https://blogs.windows.com/windowsdeveloper/2016/12/02/symlinks-windows-10/).

We wanted to implement this via `pip install --editable`, but QGIS doesn't find the `metadata.txt` and therefore cannot load the plugin on startup.
:::

# Running QGIS

In order to run QGIS with the plugins, simply call `pixi run qgis`.
You will find the Ribasim and iMOD plugins in the tool bars.

:::{.callout-note}
On Windows, running QGIS from the start menu will disable Python, and thus the plugins.
QGIS needs some more paths during the startup and the Pixi environment provides those.
:::

# Running tests

To run the QGIS plugin tests in the application environment of QGIS, it is best to make use of the Docker environment provided in this repository.
Make sure that docker is installed and available in your path.

Then simply call `pixi run test-ribasim-qgis`.

# Debugging

After installing the plugins via `pixi run install-qgis-plugins`.
Extra debugging tools are also installed in QGIS that is installed within your pixi environment.

After you have started `pixi run qgis`, you can make alterations to the Python code and use the [Plugin Reloader](https://github.com/borysiasty/plugin_reloader) to reload the plugin without restarting QGIS.
The shortcut in QGIS is `CTRL+F5`.

It is also possible to connect the debugger of Visual Studio Code.
For this the [debugvs](https://github.com/lmotta/debug_vs_plugin) plugin is installed in QGIS.
In QGIS press the button to _Enable Debug for Visual Studio_.
Then go to Visual Studio Code and start the launch task _Ribasim QGIS: Attach to QGIS_.
Now you can place breakpoints.

:::{.callout-note}
We are currently using debugvs 0.7 with ptvsd as service,
since there is an [open issue](https://github.com/lmotta/debug_vs_plugin/issues/12) that breaks debugvs 0.8 with debugpy.
:::
