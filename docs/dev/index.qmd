---
title: "Contributing"
---

Ribasim welcomes contributions.

There is developer documentation for the [Julia core](/dev/core.qmd), the [Basic Model Interface (BMI)](/dev/bmi.qmd), [Python tooling](/dev/python.qmd), and the [QGIS plugin](/dev/qgis.qmd).
A guide on how to add a new node type to both is written in [adding node types](/dev/addnode.qmd).
[Release process](/dev/release.qmd) describes the steps to follow when creating a new Ribasim release.

# Setting up the developer environment

## Clone Ribasim

In order to have the Ribasim repository locally available, you can clone it with Git.
Git can be installed from [git-scm.com](https://git-scm.com/downloads).
Once installed, run the following command at a directory of your choice:

In order to have the Ribasim repository locally available, run the following command at a directory of your choice:

```sh
git clone https://github.com/Deltares/Ribasim.git
```

To continue with the following steps, make the root of the repository your working directory by running

```sh
cd Ribasim
```

## Setting up pixi

First, set up pixi as described on their getting started [page](https://prefix.dev/docs/pixi/overview).

Then set up the environment by running the following commands:

```sh
pixi run install
```

This will automatically install all required packages for development.
Our pixi environment also provides an instance of Julia and QGIS.
These will not conflict with any pre-installed applications, as long as you have the pixi environment enabled.
You can do this in a terminal by calling `pixi shell`, or starting programs with `pixi run julia`, or `pixi run qgis`.
Visual Studio Code will locate the pixi environments; select `('default': Pixi)` once such that all developer tools are available.
Unless the setting `python.terminal.activateEnvironment` is disabled, it will already activate the environment in your terminal.
