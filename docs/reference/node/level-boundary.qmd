---
title: "LevelBoundary"
---

LevelBoundary is a node whose water level is determined by the input.
It can be used as a boundary condition like the level of the sea or a lake.
Since the water level is unaffected by flow, it acts like an infinitely large Basin.
Connect the LevelBoundary to a node that will look at the level to calculate the flow, like a LinearResistance.

# Tables

## Static

column        | type    | unit         | restriction
------------- | ------- | ------------ | -----------
node_id       | Int32   | -            |
active        | Bool    | -            | (optional, default true)
level         | Float64 | $\text{m}$          | -

## Time

This table is the transient form of the `LevelBoundary` table.
The only difference is that a time column is added and activity is assumed to be true.
With this the levels can be updated over time. In between the given times the
level is interpolated linearly, and outside the flow rate is constant given by the
nearest time value.
Note that a `node_id` can be either in this table or in the static one, but not both.

column    | type     | unit         | restriction
--------- | -------  | ------------ | -----------
node_id   | Int32    | -            |
time      | DateTime | -            |
level     | Float64  | $\text{m}$   | -

## Concentration {#sec-level-boundary-conc}
This table defines the concentration of substances for the flow from the LevelBoundary.

column         | type     | unit                  | restriction
-------------- | -------- | --------------------- | -----------
node_id        | Int32    | -                     |
time           | DateTime | -                     |
substance      | String   | -                     | can correspond to known Delwaq substances
concentration  | Float64  | $\text{g}/\text{m}^3$ |

# Equations

A LevelBoundary can be connected to a Basin via a LinearResistance.
This boundary node will then exchange water with the Basin based on the difference in water level between the two.
