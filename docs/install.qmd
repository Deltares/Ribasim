---
title: "Installation"
---

In this document, we describe how to install the different components of Ribasim.
First the components and their relation are introduced, then installation instructions per component follow.

# Components {#sec-components}

The figure below illustrates the relation between the various components of Ribasim.

```{mermaid}
flowchart TB
modeler([Modeler]):::user

python["Ribasim Python"]
modeler-->|prepare model|python

core["Ribasim core"]
modeler-->|start|core

subgraph qgisBoundary[QGIS]
    QGIS[QGIS Application]:::system_ext
    qgisPlugin["Ribasim QGIS plugin"]
    QGIS-->qgisPlugin
end
modeler-->|prepare model|qgisBoundary

model[("input model data
        [TOML + GeoPackage + Arrow]")]
qgisPlugin-->|read/write|model
python-->|read/write|model
core-->|simulate|model

output[("simulation results
         [Arrow]")]
core-->|write|output

class qgisBoundary boundary

%% class definitions for C4 model
classDef user fill:#ABD0BC
classDef system_ext fill:#D2D2D2
classDef boundary fill:transparent,stroke-dasharray:5 5
```

There are three main components of the Ribasim software package.
They are the Ribasim core, the Ribasim Python package and the Ribasim QGIS plugin.

The [core](/reference/usage.qmd) is a command line interface (CLI) that runs Ribasim simulations.
It is written in the [Julia programming language](https://julialang.org/) and is built on top of the [SciML: Open Source Software for Scientific Machine Learning](https://sciml.ai/) libraries, notably [DifferentialEquations.jl](https://docs.sciml.ai/DiffEqDocs/stable/).

The [Ribasim Python package](/reference/python/index.qmd) is available to build, update and analyze Ribasim models programmatically.
One can also use Ribasim Python to build entire models from base data, such that your model setup is fully reproducible.

Ribasim uses [GeoPackage](https://www.geopackage.org/) files to store the model database (`database.gpkg`).
[QGIS](https://qgis.org/) works well with GeoPackage files, making it a good application to visualize Ribasim models.
Deltares also provides the iMOD QGIS plugin, which can be used to view the timeseries in the Ribasim results.

::: {.callout-note}
The components don't depend on each other, so you can install what you need.
When using multiple components, all component versions must be the same.
If you receive a model, the Ribasim version used to create it is written in the TOML file.
Older releases can be found in the [Release assets on GitHub](https://github.com/Deltares/Ribasim/releases).
:::

::: {.callout-note}
To update an existing installation of Ribasim, follow the same installation on this page.
Change the version number in the command or download link to install a version other than the latest release,
or download directly from the [Release assets on GitHub](https://github.com/Deltares/Ribasim/releases).

For a guide on how to update existing models to new Ribasim versions, see the [guide on updating Ribasim](/guide/updating-ribasim.qmd).
:::

# Install Ribasim core {#sec-install-core}

Ribasim is typically used as a command-line interface (CLI). It is distributed as a `.zip`
archive, that must be downloaded and unpacked. It can be placed anywhere, however it is
important that the contents of the zip file are kept together in a directory. The Ribasim
executable is in the main folder.

## Windows installation script (recommended)

The easiest way to install Ribasim on Windows is to use the installation script.
Open a terminal and run:

```powershell
powershell -ExecutionPolicy ByPass -c "irm https://ribasim.org/install.ps1 | iex"
```

This will download and install the latest version of Ribasim to `%LOCALAPPDATA%\ribasim` and automatically add it to your PATH.
After installation, you can run `ribasim --help` from any directory.

You can set the `RIBASIM_HOME` environment variable if you wish to install it in a different directory.
Use the manual installation to install older versions of Ribasim, or if you don't want to add it to your PATH.

## Manual installation

To download the Ribasim core manually, download the appropriate zip file for your operating system:

- Ribasim executable - Windows: [ribasim_windows.zip](https://github.com/Deltares/Ribasim/releases/download/v2025.6.0/ribasim_windows.zip)
- Ribasim executable - Linux: [ribasim_linux.zip](https://github.com/Deltares/Ribasim/releases/download/v2025.6.0/ribasim_linux.zip)

Note that we currently only support and provide binaries for Windows and Linux, for the x86_64 architecture.

To check whether the installation was performed successfully, open a terminal and go to the path where the executable is for example `C:\bin\ribasim\`.
If you are using cmd.exe type `ribasim --help`, or for PowerShell `./ribasim`.

This will give the following message if it is installed correctly:
```
Usage: ribasim [OPTIONS] <TOML_PATH>

Arguments:
  <TOML_PATH>  Path to the TOML file

Options:
  -t, --threads <#THREADS>  Number of threads to use. Defaults to the JULIA_NUM_THREADS environment variable, and when unset, to using all (hyper)threads.
  -h, --help                Print help
  -V, --version             Print version
```

## Adding Ribasim to Path on Windows

If you used the installation script, Ribasim is already on your PATH. For manual installations, you can add the Ribasim executable directory to your Windows Path environment variable.

The Path environment variable tells Windows where to look for programs when you type their name in a terminal. By adding Ribasim to your Path, you can type `ribasim` from any folder instead of having to navigate to the Ribasim folder first or typing the full path like `C:\bin\ribasim\ribasim.exe`.

   - Search "Environment Variables" in the Windows search bar
   - Click "Edit the system environment variables"
   - Click on the "Advanced" tab
   - Click the "Environment Variables..." button at the bottom
   - In the top section "User variables", scroll down and find "Path", then click "Edit..."
   - Click "New" and enter the full path to your Ribasim directory (e.g., `C:\bin\ribasim`, not `C:\bin\ribasim\ribasim.exe`)
   - Click "OK" three times to close all dialogs
   - Close any open terminals/command prompts and open a new one

# Install Ribasim Python {#sec-install-python}

The Ribasim Python package (named `ribasim`) aims to make it easy to build, update and analyze Ribasim models
programmatically.

The Ribasim Python package is [registered in PyPI](https://pypi.org/project/ribasim/) and [conda-forge](https://prefix.dev/channels/conda-forge/packages/ribasim) and can therefore be installed with [pixi](https://pixi.sh/), [uv](https://docs.astral.sh/uv/), [pip](https://docs.python.org/3/installing/index.html) or [conda](https://docs.conda.io/).
We recommend Pixi, but installation instructions for all are provided below.

::: {.panel-tabset}

## pixi

Install Pixi following the [Pixi installation documentation](https://pixi.sh/latest/installation/).
Note that if the recommended installation methods don't work due to restriction on your PC, the [zipped executable](https://pixi.sh/latest/installation/#download-from-github-releases) is likely to still work.

Open a terminal in your project directory, and create an empty pixi environment:
```sh
pixi init
```
Now add Ribasim Python:
```sh
pixi add ribasim==2025.6.0
```
To start Python, run:
```sh
pixi run python
```

If you wish to check what is installed in your workspace, run `pixi list`.
When you run into what seems like installation issues, try `pixi clean`, followed by `pixi install`.

If your editor does not automatically detect the right Python environment, point it to `.pixi/envs/default/python.exe`.
Starting your editor via Pixi will also help it find the environment since it will already be active.
For Visual Studio Code, you can run `pixi run code .` to open your workspace.

## uv

Install `uv` following the [instructions in the uv documentation](https://docs.astral.sh/uv/getting-started/installation/).

Open a terminal in your project directory, and create an empty uv project:
```sh
uv init
```
Now add Ribasim Python:
```sh
uv add ribasim==2025.6.0
```
To start Python, run:
```sh
uv run python
```

## pip

```sh
pip install --upgrade ribasim==2025.6.0
```

## conda

Ribasim is available in the [conda-forge](https://conda-forge.org/) channel.
[Miniforge](https://conda-forge.org/download/) is the preferred conda-forge installer and includes `conda`, `mamba`, and their dependencies.
It may not work well when combined with the Anaconda default channel, see [transitioning from defaults](https://conda-forge.org/docs/user/transitioning_from_defaults/).

```sh
conda install -c conda-forge ribasim=2025.6.0
```

:::

For Ribasim Python documentation please see the [examples](/guide/examples.qmd) and [API reference](/reference/python/index.qmd).

# Install Ribasim QGIS plugin {#sec-install-qgis-plugin}

The Ribasim QGIS plugin requires [QGIS](https://qgis.org/en/site/) 3.34 or higher, and the `pandas` package
in the QGIS Python environment (which is the case by default).
The Ribasim QGIS plugin is only distributed as a .zip archive and must be downloaded and installed in QGIS.

## Install Ribasim plugin

Download `ribasim_qgis.zip`:

- QGIS plugin: [ribasim_qgis.zip](https://github.com/Deltares/Ribasim/releases/download/v2025.6.0/ribasim_qgis.zip).

In QGIS, go to Plugins menu > Manage and Install Plugins...

![](https://user-images.githubusercontent.com/4471859/224939069-9aae77ea-898f-442f-83b5-f2671c114956.png){fig-align="left"}

Select "Install from ZIP":

- Browse to the `ribasim_qgis.zip` file containing the plugin that was downloaded earlier
- Click "Install Plugin"

![](https://user-images.githubusercontent.com/4471859/224939080-7fec5db2-4417-4f7b-8e45-034d4cf4fd75.png){fig-align="left"}

Open the Ribasim plugin panel.

![](https://user-images.githubusercontent.com/4471859/224939101-228e068a-875b-4df2-98bb-6ee6a3830ddd.png){fig-align="left"}

## Install iMOD plugin

In QGIS, navigate to "Plugins > Manage and Install Plugins > All".
In the search bar, type: "iMOD". Select the iMOD plugin, and click "Install".

At least version 0.5.3 of the iMOD plugin is required.

The Time Series widget from the iMOD plugin is used for visualizing Ribasim results, which is described in the [results section](#sec-results).
Documentation on the Time Series widget can be found in the [iMOD documentation](https://deltares.github.io/iMOD-Documentation/qgis_user_manual.html#time-series-time-series).
